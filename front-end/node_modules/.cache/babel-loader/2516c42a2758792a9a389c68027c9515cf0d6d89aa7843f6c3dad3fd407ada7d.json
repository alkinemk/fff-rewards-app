{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// const testPrices: Price = {\n//   \"famous-fox-federation\": 0.005,\n//   solana: 20,\n// };\n\nfunction View(props) {\n  const {\n    missionsResults,\n    stakingResults,\n    prices,\n    view,\n    chestSalesResults\n  } = props;\n  console.log(view);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n}\n_c = View;\nexport default View;\nvar _c;\n$RefreshReg$(_c, \"View\");","map":{"version":3,"names":["View","props","missionsResults","stakingResults","prices","view","chestSalesResults","console","log","_jsxDEV","_Fragment","_c","$RefreshReg$"],"sources":["/Users/alkine/dev/fff-rewards/front-end/src/components/View.tsx"],"sourcesContent":["import DetailedView from \"./DetailedView\";\nimport LiteView from \"./LiteView\";\n\n// const testPrices: Price = {\n//   \"famous-fox-federation\": 0.005,\n//   solana: 20,\n// };\n\ntype Price = {\n  [key: string]: number;\n};\n\ninterface Props {\n  isLoading: boolean;\n  missionsResults: Array<Array<number | string>>;\n  stakingResults: number;\n  chestSalesResults: number;\n  prices: Price;\n  view: boolean;\n\n  tokenMarket: boolean;\n}\n\nfunction View(props: Props) {\n  const { missionsResults, stakingResults, prices, view, chestSalesResults } =\n    props;\n\n  console.log(view);\n\n  return (\n    <>\n      {/* {view ? (\n        <DetailedView\n          missionsResults={missionsResults}\n          chestSalesResults={chestSalesResults}\n          stakingResults={stakingResults}\n        />\n      ) : (\n        <LiteView\n          missionsResults={missionsResults}\n          chestSalesResults={chestSalesResults}\n          stakingResults={stakingResults}\n          prices={prices}\n        />\n      )} */}\n    </>\n  );\n}\n\nexport default View;\n"],"mappings":";;AAGA;AACA;AACA;AACA;;AAiBA,SAASA,IAAIA,CAACC,KAAY,EAAE;EAC1B,MAAM;IAAEC,eAAe;IAAEC,cAAc;IAAEC,MAAM;IAAEC,IAAI;IAAEC;EAAkB,CAAC,GACxEL,KAAK;EAEPM,OAAO,CAACC,GAAG,CAACH,IAAI,CAAC;EAEjB,oBACEI,OAAA,CAAAC,SAAA,oBAeG;AAEP;AAACC,EAAA,GAxBQX,IAAI;AA0Bb,eAAeA,IAAI;AAAC,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}